{
	"info": {
		"_postman_id": "50deb85e-0ef8-4b57-9ede-f3b03a554619",
		"name": "Automatizados 2 Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Insere pet disponível id 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = JSON.parse(responseBody);// Vetor atribuído à variável responseJSON\r",
							"tests[\"Validar status disponível do novo pet\"] = responseJSON.status ===\"available\"; \r",
							"tests[\"Validar inserção do novo pet\"] = responseJSON.name===\"doggie\" \r",
							"tests[\"Validar id novo pet \"] = responseJSON.id===10 \r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"Id_Pet\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 10,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}v2/pet",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consulta Pets disponíveis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Validação do estrutura - 1', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.false;\r",
							"});\r",
							"\r",
							"\r",
							"var responseSchema =\r",
							"{\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"category\": {\r",
							"            \"$id\": \"#/properties/category\",\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/category/properties/id\",\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"name\": {\r",
							"                    \"$id\": \"#/properties/category/properties/name\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"photoUrls\": {\r",
							"            \"$id\": \"#/properties/photoUrls\",\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/photoUrls/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/photoUrls/items/anyOf/0\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"tags\": {\r",
							"            \"$id\": \"#/properties/tags\",\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/tags/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/tags/items/anyOf/0\",\r",
							"                        \"type\": \"object\",\r",
							"                        \"properties\": {\r",
							"                            \"id\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/id\",\r",
							"                                \"type\": \"integer\"\r",
							"                            },\r",
							"                            \"name\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/name\",\r",
							"                                \"type\": \"string\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"var jsonData = pm.response.json(); // Test for response data structure\r",
							"pm.test('Validação da estrutura - 2', function()\r",
							"{validation = tv4.validate(jsonData, responseSchema);\r",
							"pm.expect(validation).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}v2/pet/{{Id_Pet}}",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet",
						"{{Id_Pet}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleta pet id 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Pet de código 10 deletado - OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = JSON.parse(responseBody);\r",
							"tests[\"Valida message do response = 10\"] = responseJSON.message === \"10\";\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}v2/pet/{{Id_Pet}}",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet",
						"{{Id_Pet}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insere pet pendente id 20",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = JSON.parse(responseBody);// Vetor atribuído à variável responseJSON\r",
							"tests[\"Validar status disponível do novo pet\"] = responseJSON.status ===\"pending\"; \r",
							"tests[\"Validar inserção do novo pet\"] = responseJSON.name===\"doggy\" \r",
							"tests[\"Validar id novo pet \"] = responseJSON.id===20 \r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"Id_Pet\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 20,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"pending\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}v2/pet",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consulta Pets pendentes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validação Status code\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Validação do estrutura - 1', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.false;\r",
							"});\r",
							"\r",
							"\r",
							"var responseSchema =\r",
							"{\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"category\": {\r",
							"            \"$id\": \"#/properties/category\",\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/category/properties/id\",\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"name\": {\r",
							"                    \"$id\": \"#/properties/category/properties/name\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"photoUrls\": {\r",
							"            \"$id\": \"#/properties/photoUrls\",\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/photoUrls/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/photoUrls/items/anyOf/0\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"tags\": {\r",
							"            \"$id\": \"#/properties/tags\",\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/tags/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/tags/items/anyOf/0\",\r",
							"                        \"type\": \"object\",\r",
							"                        \"properties\": {\r",
							"                            \"id\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/id\",\r",
							"                                \"type\": \"integer\"\r",
							"                            },\r",
							"                            \"name\": {\r",
							"                                \"$id\": \"#/properties/tags/items/anyOf/0/properties/name\",\r",
							"                                \"type\": \"string\"\r",
							"                            }\r",
							"                        }\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"var jsonData = pm.response.json(); // Test for response data structure\r",
							"pm.test('Validação da estrutura - 2', function()\r",
							"{validation = tv4.validate(jsonData, responseSchema);\r",
							"pm.expect(validation).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}v2/pet/{{Id_Pet}}",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet",
						"{{Id_Pet}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleta pet id 20",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Pet de código 20 deletado - OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJSON = JSON.parse(responseBody);\r",
							"tests[\"Valida message do response = 20\"] = responseJSON.message === \"20\";\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}v2/pet/{{Id_Pet}}",
					"host": [
						"{{BaseUrl}}v2"
					],
					"path": [
						"pet",
						"{{Id_Pet}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "https://petstore.swagger.io/"
		},
		{
			"key": "Status_Availabe",
			"value": "available"
		},
		{
			"key": "Status_Pending",
			"value": "pending"
		},
		{
			"key": "Status_Sold",
			"value": "sold"
		},
		{
			"key": "Id_Pet_10",
			"value": "10"
		},
		{
			"key": "Id_Pet_20",
			"value": "20"
		}
	]
}